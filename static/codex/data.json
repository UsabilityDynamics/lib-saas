{
    "project": {
        "name": "lib-saas",
        "version": "0.0.1",
        "url": "https://github.com/UsabilityDynamics/lib-saas/",
        "logo": "http://a3d72a45d111006ec192-ec5b80a12b0b09b4d52373336afb4254.r80.cf1.rackcdn.com/usability-dynamics.png"
    },
    "files": {
        "lib/cloud.php": {
            "name": "lib/cloud.php",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/saas.php": {
            "name": "lib/saas.php",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "scripts/model.js": {
            "name": "scripts/model.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "scripts/saas.js": {
            "name": "scripts/saas.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "scripts/socket.js": {
            "name": "scripts/socket.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {},
    "classitems": [
        {
            "file": "lib/cloud.php",
            "line": 2,
            "class": ""
        },
        {
            "file": "lib/cloud.php",
            "line": 10,
            "description": "UD Cloud API\nEstablishes UD Cloud Connection and Pushes Objects as defined in Configuration on Update",
            "version": "1.1.2",
            "author": "potanin@UD",
            "package": "UD",
            "supackage": "UD_Cloud",
            "class": ""
        },
        {
            "file": "lib/cloud.php",
            "line": 32,
            "description": "Initializes Bridge by Adding Filters",
            "since": "1.0.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "lib/cloud.php",
            "line": 53,
            "description": "Synchronized listings with Cloud Searching Service",
            "todo": [
                "Add extend() to args. - potanin@UD 10/08/12"
            ],
            "version": "1.1",
            "since": "2.0",
            "class": ""
        },
        {
            "file": "lib/cloud.php",
            "line": 206,
            "description": "Delete Document from Cloud",
            "action": "before_delete_post|wp_trash_post",
            "todo": [
                "Must use DELETE method for request",
                "also uses wrong key."
            ],
            "class": ""
        },
        {
            "file": "lib/cloud.php",
            "line": 219,
            "description": "Updates system log.",
            "since": "1.0.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "lib/cloud.php",
            "line": 235,
            "description": "Updates object log",
            "since": "1.0.1",
            "class": ""
        },
        {
            "file": "lib/cloud.php",
            "line": 245,
            "description": "Load Configuration Data from Option, stored as JSON",
            "version": "1.0.0",
            "since": "1.0.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "lib/cloud.php",
            "line": 295,
            "description": "Get information about information stored in cloud, synchronization status, etc.",
            "since": "2.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "lib/cloud.php",
            "line": 309,
            "description": "Initializes Bridge by Adding Filters",
            "since": "1.0.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 2,
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 9,
            "description": "UD SaaS Functions\n\nDescription: UD SaaS functions",
            "author": "team@UD",
            "version": "0.1",
            "package": "UD",
            "subpackage": "Functions",
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 21,
            "description": "Returns one of several keys. Different keys are used for different things.\n\napi - key for API requests to site\n\nsite_uid - site ( blog ) unique ID. Only set your site UID if you know what you're doing. The key should only be used on one website at a time to avoid conflicts.\nFor instance, if you have a staging and a production environment with synchronized databases, you can use the same Site UID on both sites.\n\npublic_key - Public key is used on the front-end of the site to access data that requires a subscription. The public key is restricted to specified IP addresses\nand and is therefore safe for front-end use. The public key is provided by the UD API service after the site requesting it has been verified. This key is required to access\nmost restricted and premium functionality.\n\ncustomer_key - private keys issued to individuals directly, may be used on multiple sites and in most cases can take place of a missing site_uid. Never shown publicly\nin clear text. It can be used in md5 format when a public_key does not exist, or has been rejected.",
            "updated": "2.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 47,
            "description": "API Keys must be manually entered into the Settings UI or it can be set as define in wp-config.php",
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 56,
            "description": "Site UID must be manually generated into the Settings UI or it can be set as define in wp-config.php",
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 64,
            "description": "Requires site verification.",
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 72,
            "description": "Customer Keys must be manually entered into the Settings UI. Customer Keys are given out during purchases, to beta testers,\nand in other non-automated situations.",
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 79,
            "description": "Customer key must be the same for all blogs\nIt's stored in wp_options of blog #1.",
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 99,
            "description": "Determines if SaaS settings are available",
            "author": "peshkov@UD",
            "return": {
                "description": "boolean"
            },
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 111,
            "description": "Determines if current site ( blog ) has capabilities for the passed premium feature",
            "todo": [
                ": finish implementation"
            ],
            "return": {
                "description": "boolean"
            },
            "author": "peshkov@UD",
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 136,
            "description": "Handler for general API calls to UD\n\nOn Errors, the data response includes request URL, request body, and response headers / body.",
            "updated": "1.0.3",
            "since": "1.0.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "lib/saas.php",
            "line": 201,
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 1,
            "description": "ViewModel class for all knockout/saas instances ( view models )",
            "version": "1.0",
            "package": "Knockout",
            "subpackage": "UD",
            "dependencies": "jquery, knockout, knockout-mapping, ud.socket, ud.saas",
            "author": "team@UD",
            "params": [
                {
                    "name": "args.",
                    "description": "mixed. Settings."
                }
            ],
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 116,
            "description": "Determine if Saas connection is not established.\nIf yes, - so it can be the reason of timeout.\nTry to ignore Saas connection in this case and apply bindings without Saas. peshkov@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 160,
            "description": "Creates View_Model\n\nAny view_model methods or static variables shoud be added inside of this function.",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 199,
            "description": "Pushes new element to array.\n\nExample of usage:\ndata-bind=\"click: $root.add_data.bind( $data, $root.some_array, $root.vhandler )\"\nwhere $root.vhandler is a function, which creates data.\n\n$root.vhandler example:\nself.handler = function() {\n  var self = this;\n  self.arg1 = ko.observable( 'value1' );\n  self.arg2 = 'value2';\n}",
            "params": [
                {
                    "name": "observableArray",
                    "description": "item. Where we want to add new data"
                },
                {
                    "name": "mixed",
                    "description": "vhandler. Name of function or function which inits new data"
                },
                {
                    "name": "object",
                    "description": "view_model. The current view_model object"
                },
                {
                    "name": "object",
                    "description": "event."
                }
            ],
            "author": "peshkov@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 232,
            "description": "Removes data from array.\n\nExample of usage:\ndata-bind=\"click: $root.remove_data.bind( $data, $root.some_array )\"",
            "params": [
                {
                    "name": "observableArray",
                    "description": "item. Where we want to remove data"
                },
                {
                    "name": "mixed",
                    "description": "data. Data which should be removed from array."
                },
                {
                    "name": "object",
                    "description": "event."
                }
            ],
            "author": "peshkov@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 255,
            "description": "Checks item in array\nTemplate Helper Function",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 266,
            "description": "Renders Message in Navbar sent by SaaS.",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 316,
            "description": "Wrapper for ko.applyBindings()\n\nCalls before ko.applyBindings() - self.pre_apply()\nCalls after ko.applyBindings()  - init()",
            "author": "peshkov@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 367,
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 392,
            "description": "Recursively parses model data and prepares it for MVVM view_model.\nInternal function which called automatically on view_model initialization.\nShould not be used manually!",
            "author": "peshkov@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 450,
            "description": "Contains additional interfaces added by hooks\n\nIt's used instead of do_action.\nYou should add all additional data to the current interface by apply_filter,\nwhich has to be called in model.\n\nTo add 'some_action' hook to interface you should do the following steps:\nView:\n<div data-action_hook=\"some_action\"></div>\nModel:\nr._action = { some_hook: [ '<div>HEllo</div>', '<span>WoRlD!</span>' ], some_other_hook: [ '' ], ... }\nResult:\n<div data-action_hook=\"some_action\"><div>HEllo</div><span>WoRlD!</span></div>",
            "author": "peshkov@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 471,
            "description": "SAAS interface\nUsed by SaaS. All data for SaaS emit should be added here.",
            "author": "peshkov@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 502,
            "description": "Any other data.\nCheck it recursively.",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 511,
            "description": "Determine if we need to check data recursively or just set value.",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 535,
            "description": "Determine if we already have model or we need to get it from server.",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 541,
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 589,
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 605,
            "description": "Go through all hooks and add interfaces if exist.\nSee: case _action in self._prepare_model_data()",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 621,
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 623,
            "description": "Ran after SaaS has trigger Screen Set Event, meaning it is ready",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 631,
            "description": "If ignore is true we stop SaaS initialization.\nIt happens, if timeout is called and Saas is still not established.",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 641,
            "description": "Determine if view_model has saas data before add listeners",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 650,
            "description": "Wait for Interface Request",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 663,
            "description": "Monitor Update Triggers, and set values",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 714,
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 728,
            "description": "Observable data, pares and add Subscribers to all observable items that emit updates",
            "params": [
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 783,
            "description": "Now we try to connect to SaaS ( if saas.model is set )\nIf SaaS Screen is specified, we wait for screen to be ready, and then load Interface, if needed",
            "class": ""
        },
        {
            "file": "scripts/model.js",
            "line": 790,
            "class": ""
        },
        {
            "file": "scripts/saas.js",
            "line": 1,
            "description": "UD Loader. Initial global object extended by product-specific globals",
            "version": "1.2",
            "package": "UD",
            "author": "team@UD",
            "class": ""
        },
        {
            "file": "scripts/saas.js",
            "line": 43,
            "description": "Establish connection with UD Driver.\n\nTriggered by client-side functions when SaaS support is requested.",
            "since": "1.0.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "scripts/saas.js",
            "line": 140,
            "description": "Disconnect from SaaS",
            "author": "peshkov@UD",
            "class": ""
        },
        {
            "file": "scripts/saas.js",
            "line": 158,
            "description": "Programmatically Execute Emit\n\nExample: ud.saas.emit( 'get_capabilities' );",
            "since": "1.1.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "scripts/saas.js",
            "line": 179,
            "description": "Programmatically Execute Emit\n\nExample: ud.saas.emit( 'get_capabilities' );",
            "since": "1.1.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "scripts/saas.js",
            "line": 210,
            "description": "Instance-specific emit/on handler\n\nA shorthand for a emit/on combination that tracks lookup instance.\nThe third argument can be a callback or a variable.",
            "since": "2.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "scripts/saas.js",
            "line": 280,
            "description": "Internal logging function.",
            "version": "1.0.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "scripts/saas.js",
            "line": 304,
            "description": "Enable Global IO Data Logger",
            "since": "2.0",
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1,
            "description": "Socket.IO",
            "version": "1.0.1",
            "package": "UD",
            "author": "dev@learnboost.com, team@UD",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 16,
            "description": "Main\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 29,
            "description": "Protocol implemented.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 36,
            "description": "Available transports, these will be populated with the available transports",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 43,
            "description": "Keep track of jsonp callbacks.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 50,
            "description": "Keep track of our io.Sockets",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 57,
            "description": "Keep track of transactions",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 64,
            "description": "Manages connections to hosts.",
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "force",
                    "description": "creation of new socket (defaults to false)",
                    "type": "Boolean"
                }
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 105,
            "description": "Request Emitter (Standard way of doing requests)\n\nPaths should begin with a forwardslash and end without a trailing slash.\n\napp.request( METHOD, PATH, [ARGS, CALLBACK()]);",
            "author": "korotkov@ud",
            "since": "0.5",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 148,
            "description": "Response Message Listener",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 198,
            "description": "Logger",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 220,
            "description": "Utilities\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 229,
            "description": "Utilities namespace.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 236,
            "description": "Parses an URI",
            "author": "Steven Levithan <stevenlevithan.com> (MIT license)",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 259,
            "description": "Produces a unique url that identifies a Socket.IO connection.",
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 284,
            "description": "Mergest 2 query strings in to once unique query string",
            "params": [
                {
                    "name": "base",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "addition",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 305,
            "description": "Transforms a querystring in to an object",
            "params": [
                {
                    "name": "qs",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 328,
            "description": "Executes the given function when the page is loaded.\n\n    io.util.load(function () { console.log('page loaded'); });",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 346,
            "description": "Adds an event.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 359,
            "description": "Generates the correct `XMLHttpRequest` for regular and cross domain requests.",
            "params": [
                {
                    "name": "xdomain",
                    "description": "Create a request that can be used cross domain.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "If we can create a XMLHttpRequest.",
                "type": "XMLHttpRequest|false"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 386,
            "description": "XHR based transport constructor.",
            "is_constructor": 1,
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 392,
            "description": "Change the internal pageLoaded value.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 401,
            "description": "Defers a function to ensure a spinner is not displayed by the browser",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 417,
            "description": "Merges two objects.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 441,
            "description": "Merges prototypes from objects",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 450,
            "description": "Shortcut for prototypical and static inheritance.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 462,
            "description": "Checks if the given object is an Array.\n\n    io.util.isArray([]); // true\n    io.util.isArray({}); // false",
            "params": [
                {
                    "name": "Object",
                    "description": "obj"
                }
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 475,
            "description": "Intersects values of two arrays into a third",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 494,
            "description": "Array indexOf compatibility.",
            "see": [
                "bit.ly/a5Dxa2"
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 507,
            "description": "Converts enumerables to array.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 522,
            "description": "UA / engines detection namespace.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 529,
            "description": "Whether the UA supports CORS for XHR.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 545,
            "description": "Detect webkit.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 552,
            "description": "Detect iPad/iPhone/iPod.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 561,
            "description": "Events\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 570,
            "description": "Expose constructor.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 575,
            "description": "Event emitter constructor.",
            "api": "public.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 583,
            "description": "Adds a listener",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 606,
            "description": "Adds a volatile listener.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 625,
            "description": "Removes a listener.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 661,
            "description": "Removes all listeners for an event.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 679,
            "description": "Gets all listeners for a certain event.",
            "api": "publci",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 700,
            "description": "Emits an event.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 740,
            "description": "JSON Handling\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1035,
            "description": "Parser\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1044,
            "description": "Parser namespace.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1051,
            "description": "Packet types.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1066,
            "description": "Errors reasons.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1075,
            "description": "Errors advice.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1082,
            "description": "Shortcuts.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1088,
            "description": "Encodes a packet.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1157,
            "description": "Encodes multiple messages (payload).",
            "params": [
                {
                    "name": "messages",
                    "description": "",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1178,
            "description": "Decodes a packet",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1264,
            "description": "Decodes data payload. Detects multiple messages",
            "return": {
                "description": "messages",
                "type": "Array"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1293,
            "description": "Transports\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1302,
            "description": "Expose constructor.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1307,
            "description": "This is the transport template for all supported transport methods.",
            "is_constructor": 1,
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1318,
            "description": "Apply EventEmitter mixin.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1324,
            "description": "Indicates whether heartbeats is enabled for this transport",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1333,
            "description": "Handles the response from the server. When a new response is received\nit will automatically update the timeout, decode the message and\nforwards the response to the onMessage function for further processing.",
            "params": [
                {
                    "name": "data",
                    "description": "Response from the server.",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1368,
            "description": "Handles packets.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1393,
            "description": "Sets close timeout",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1408,
            "description": "Called when transport disconnects.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1420,
            "description": "Called when transport connects",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1430,
            "description": "Clears close timeout",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1442,
            "description": "Clear timeouts",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1455,
            "description": "Sends a packet",
            "params": [
                {
                    "name": "packet",
                    "description": "object.",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1465,
            "description": "Send the received heartbeat message back to server. So the server\nknows we are still connected.",
            "params": [
                {
                    "name": "heartbeat",
                    "description": "Heartbeat response from the server.",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1476,
            "description": "Called when the transport opens.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1487,
            "description": "Notifies the base when the connection with the Socket.IO server\nhas been disconnected.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1505,
            "description": "Generates a connection url based on the Socket.IO URL Protocol.\nSee <https://github.com/learnboost/socket.io-node/> for more details.",
            "return": {
                "description": "Connection url",
                "type": "String"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1518,
            "description": "Checks if the transport is ready to start a connection.",
            "params": [
                {
                    "name": "socket",
                    "description": "The socket instance that needs a transport",
                    "type": "Socket"
                },
                {
                    "name": "fn",
                    "description": "The callback",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1531,
            "description": "Socket\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1540,
            "description": "Expose constructor.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1545,
            "description": "Create a new `Socket.IO client` which can establish a persistent\nconnection with a Socket.IO enabled server.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1595,
            "description": "Apply EventEmitter mixin.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1600,
            "description": "Returns a namespace listener/emitter for this socket",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1617,
            "description": "Emits the given event to the Socket and all namespaces",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1635,
            "description": "Performs the handshake",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1699,
            "description": "Find an available transport based on the options supplied in the constructor.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1716,
            "description": "Connects to the server.",
            "params": [
                {
                    "name": "fn",
                    "description": "Callback.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "io.Socket"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1794,
            "description": "Clears and sets a new heartbeat timeout using the value given by the\nserver during the handshake.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1810,
            "description": "Sends a message.",
            "params": [
                {
                    "name": "data",
                    "description": "packet.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "io.Socket"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1827,
            "description": "Sets buffer state",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1842,
            "description": "Flushes the buffer data over the wire.\nTo be invoked manually when 'manualFlush' is set to true.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1853,
            "description": "Disconnect the established connect.",
            "return": {
                "description": "",
                "type": "io.Socket"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1872,
            "description": "Disconnects the socket with a sync XHR.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1896,
            "description": "Check if we need to use cross domain enabled transports. Cross domain would\nbe a different port or different domain name.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1910,
            "description": "Called upon handshake.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1928,
            "description": "Called when the transport opens",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1937,
            "description": "Called when the transport closes.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1947,
            "description": "Called when the transport first opens a connection",
            "params": [
                {
                    "name": "text",
                    "description": ""
                }
            ],
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1956,
            "description": "Handles an error.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1974,
            "description": "Called when the transport disconnects.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 1999,
            "description": "Called upon reconnection.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2084,
            "description": "Namespaces\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2093,
            "description": "Expose constructor.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2098,
            "description": "Socket namespace constructor.",
            "is_constructor": 1,
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2113,
            "description": "Apply EventEmitter mixin.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2118,
            "description": "Copies emit since we override it",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2125,
            "description": "Creates a new namespace, by proxying the request to the socket. This\nallows us to use the synax as we do on the server.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2135,
            "description": "Sends a packet.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2147,
            "description": "Sends a message",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2166,
            "description": "Emits an event",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2190,
            "description": "Disconnects the namespace",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2206,
            "description": "Handles a packet",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2277,
            "description": "Flag interface.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2287,
            "description": "Send a message",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2297,
            "description": "Emit an event",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2309,
            "description": "WebSocket\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2318,
            "description": "Expose constructor.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2323,
            "description": "The WebSocket transport uses the HTML5 WebSocket API to establish an\npersistent connection with the Socket.IO server. This transport will also\nbe inherited by the FlashSocket fallback as it provides a API compatible\npolyfill for the WebSockets.",
            "is_constructor": 1,
            "extends": "{io.Transport}",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2337,
            "description": "Inherits from Transport.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2342,
            "description": "Transport name",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2349,
            "description": "Initializes a new `WebSocket` connection with the Socket.IO server. We attach\nall the appropriate listeners to handle the responses from the server.",
            "return": {
                "description": "",
                "type": "Transport"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2386,
            "description": "Send a message to the Socket.IO server. The message will automatically be\nencoded in the correct message format.",
            "return": {
                "description": "",
                "type": "Transport"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2411,
            "description": "Payload",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2423,
            "description": "Disconnect the established `WebSocket` connection.",
            "return": {
                "description": "",
                "type": "Transport"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2434,
            "description": "Handle the errors that `WebSocket` might be giving when we\nare attempting to connect or send messages.",
            "params": [
                {
                    "name": "e",
                    "description": "The error.",
                    "type": "Error"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2445,
            "description": "Returns the appropriate scheme for the URI generation.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2454,
            "description": "Checks if the browser has support for native `WebSockets` and that\nit's not the polyfill created for the FlashSocket transport.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2465,
            "description": "Check if the `WebSocket` transport support cross domain communications.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2475,
            "description": "Add the transport to your public io.transports array.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2484,
            "description": "Faux WebSocket\n\nCopyright: Hiroshi Ichikawa <http://gimite.net/en/>",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2509,
            "description": "This class represents a faux web socket.",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "protocols",
                    "description": "",
                    "type": "Array or string"
                },
                {
                    "name": "proxyHost",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "proxyPort",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2538,
            "description": "Send data to the web socket.",
            "params": [
                {
                    "name": "data",
                    "description": "The data to send to the socket.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True for success, false for failure.",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2564,
            "description": "Close this web socket gracefully.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2575,
            "description": "Implementation of {@link <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-registration\">DOM 2 EventTarget Interface</a>}",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "useCapture",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2590,
            "description": "Implementation of {@link <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-registration\">DOM 2 EventTarget Interface</a>}",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "useCapture",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2609,
            "description": "Implementation of {@link <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-registration\">DOM 2 EventTarget Interface</a>}",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2624,
            "description": "Handles an event from Flash.",
            "params": [
                {
                    "name": "flashEvent",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2673,
            "description": "Define the WebSocket readyState enumeration.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2686,
            "description": "Load a new flash security policy file.",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2696,
            "description": "Loads WebSocketMain.swf and creates WebSocketMain object in Flash.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2740,
            "description": "Called by Flash to notify JS that it's fully loaded and ready\nfor communication.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2758,
            "description": "Called by Flash to notify WebSockets events are fired.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2797,
            "description": "Test if the browser is running flash lite.",
            "return": {
                "description": "True if flash lite is running, false otherwise.",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2826,
            "description": "XHR\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2835,
            "description": "Expose constructor.",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2842,
            "description": "XHR constructor",
            "costructor": "",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2855,
            "description": "Inherits from Transport.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2860,
            "description": "Establish a connection",
            "return": {
                "description": "",
                "type": "Transport"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2878,
            "description": "Check if we need to send data to the Socket.IO server, if we have data in our\nbuffer we encode it and forward it to the `post` method.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2894,
            "description": "Send data to the Socket.IO server.",
            "params": [
                {
                    "name": "data",
                    "description": "The message"
                }
            ],
            "return": {
                "description": "",
                "type": "Transport"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2906,
            "description": "Posts a encoded message to the Socket.IO server.",
            "params": [
                {
                    "name": "data",
                    "description": "A encoded message.",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2948,
            "description": "Disconnects the established `XHR` connection.",
            "return": {
                "description": "",
                "type": "Transport"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2959,
            "description": "Generates a configured XHR request",
            "params": [
                {
                    "name": "url",
                    "description": "The url that needs to be requested.",
                    "type": "String"
                },
                {
                    "name": "method",
                    "description": "The method the request should use.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "XMLHttpRequest"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2988,
            "description": "Returns the scheme to use for the transport URLs.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 2997,
            "description": "Check if the XHR transports are supported",
            "params": [
                {
                    "name": "xdomain",
                    "description": "Check if we support cross domain requests.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3018,
            "description": "Check if the XHR transport supports cross domain requests.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3030,
            "description": "XHR Polling\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3039,
            "description": "Expose constructor.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3044,
            "description": "The XHR-polling transport uses long polling XHR requests to create a\n\"persistent\" connection with the server.",
            "is_constructor": 1,
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3055,
            "description": "Inherits from XHR transport.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3060,
            "description": "Merge the properties from XHR transport",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3065,
            "description": "Transport name",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3072,
            "description": "Indicates whether heartbeats is enabled for this transport",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3081,
            "description": "Establish a connection, for iPhone and Android this will be done once the page\nis loaded.",
            "return": {
                "description": "Chaining.",
                "type": "Transport"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3095,
            "description": "Starts a XHR request to wait for incoming messages.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3144,
            "description": "Handle the unclean close behavior.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3162,
            "description": "Webkit based browsers show a infinit spinner when you start a XHR request\nbefore the browsers onload event is called so we need to defer opening of\nthe transport until the onload event is called. Wrapping the cb in our\ndefer method solve this.",
            "params": [
                {
                    "name": "socket",
                    "description": "The socket instance that needs a transport",
                    "type": "Socket"
                },
                {
                    "name": "fn",
                    "description": "The callback",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3180,
            "description": "Add the transport to your public io.transports array.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3189,
            "description": "JSON Polling\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3197,
            "description": "There is a way to hide the loading indicator in Firefox. If you create and\nremove a iframe it will stop showing the current loading indicator.\nUnfortunately we can't feature detect that and UA sniffing is evil.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3207,
            "description": "Expose constructor.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3212,
            "description": "The JSONP transport creates an persistent connection by dynamically\ninserting a script tag in the page. This script tag will receive the\ninformation of the Socket.IO server. When new information is received\nit creates a new script tag for the new data stream.",
            "is_constructor": 1,
            "extends": "{io.Transport.xhr-polling}",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3234,
            "description": "Inherits from XHR polling transport.",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3239,
            "description": "Transport name",
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3246,
            "description": "Posts a encoded message to the Socket.IO server using an iframe.\nThe iframe is used because script tags can create POST based requests.\nThe iframe is positioned outside of the view so the user does not\nnotice it's existence.",
            "params": [
                {
                    "name": "data",
                    "description": "A encoded message.",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3332,
            "description": "Creates a new JSONP poll that can be used to listen\nfor messages from the Socket.IO server.",
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3367,
            "description": "Callback function for the incoming message stream from the Socket.IO server.",
            "params": [
                {
                    "name": "data",
                    "description": "The message",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3381,
            "description": "The indicator hack only works after onload",
            "params": [
                {
                    "name": "socket",
                    "description": "The socket instance that needs a transport",
                    "type": "Socket"
                },
                {
                    "name": "fn",
                    "description": "The callback",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3397,
            "description": "Checks if browser supports this transport.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3407,
            "description": "Check if cross domain requests are supported",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "scripts/socket.js",
            "line": 3417,
            "description": "Add the transport to your public io.transports array.",
            "api": "private",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " lib/cloud.php:10"
        },
        {
            "message": "unknown tag: package",
            "line": " lib/cloud.php:10"
        },
        {
            "message": "unknown tag: supackage",
            "line": " lib/cloud.php:10"
        },
        {
            "message": "unknown tag: version",
            "line": " lib/cloud.php:53"
        },
        {
            "message": "unknown tag: action",
            "line": " lib/cloud.php:206"
        },
        {
            "message": "unknown tag: version",
            "line": " lib/cloud.php:245"
        },
        {
            "message": "unknown tag: version",
            "line": " lib/saas.php:9"
        },
        {
            "message": "unknown tag: package",
            "line": " lib/saas.php:9"
        },
        {
            "message": "unknown tag: subpackage",
            "line": " lib/saas.php:9"
        },
        {
            "message": "unknown tag: updated",
            "line": " lib/saas.php:21"
        },
        {
            "message": "unknown tag: updated",
            "line": " lib/saas.php:136"
        },
        {
            "message": "unknown tag: version",
            "line": " scripts/model.js:1"
        },
        {
            "message": "unknown tag: package",
            "line": " scripts/model.js:1"
        },
        {
            "message": "unknown tag: subpackage",
            "line": " scripts/model.js:1"
        },
        {
            "message": "unknown tag: dependencies",
            "line": " scripts/model.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " scripts/saas.js:1"
        },
        {
            "message": "unknown tag: package",
            "line": " scripts/saas.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " scripts/saas.js:280"
        },
        {
            "message": "unknown tag: version",
            "line": " scripts/socket.js:1"
        },
        {
            "message": "unknown tag: package",
            "line": " scripts/socket.js:1"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:29"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:36"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:43"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:50"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:57"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:64"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:236"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:259"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:284"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:305"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:328"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:346"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:359"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:359"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:386"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:401"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:417"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:441"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:450"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:462"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:475"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:494"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:507"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:529"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:545"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:552"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:575"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:583"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:606"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:625"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:661"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:679"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:700"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1088"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1157"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1178"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1264"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1307"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1324"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1333"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1368"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1393"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1408"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1420"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1430"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1442"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1455"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1465"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1476"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1487"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:1505"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1505"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1518"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1545"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1600"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1617"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1635"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1699"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:1716"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1716"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1794"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:1810"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1810"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1827"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1842"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:1853"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1853"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1872"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:1896"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1896"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1910"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1928"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1937"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1956"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1974"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:1999"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2098"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2118"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2125"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2135"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2147"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2166"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2190"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2206"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2277"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2287"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2297"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2323"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2342"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:2349"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2349"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:2386"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2386"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2411"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:2423"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2423"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2434"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2445"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2454"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:2465"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2465"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2475"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2835"
        },
        {
            "message": "unknown tag: costructor",
            "line": " scripts/socket.js:2842"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2842"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:2860"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2860"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2878"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:2894"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2894"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2906"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:2948"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2948"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:2959"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2959"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2988"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:2997"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:2997"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:3018"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3018"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3044"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3065"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3072"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:3081"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3081"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3095"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3144"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3162"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3180"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3197"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3212"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3239"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3246"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3332"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3367"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3381"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3397"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scripts/socket.js:3407"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3407"
        },
        {
            "message": "unknown tag: api",
            "line": " scripts/socket.js:3417"
        },
        {
            "message": "Missing item type",
            "line": " lib/cloud.php:2"
        },
        {
            "message": "Missing item type\nUD Cloud API\nEstablishes UD Cloud Connection and Pushes Objects as defined in Configuration on Update",
            "line": " lib/cloud.php:10"
        },
        {
            "message": "Missing item type\nInitializes Bridge by Adding Filters",
            "line": " lib/cloud.php:32"
        },
        {
            "message": "Missing item type\nSynchronized listings with Cloud Searching Service",
            "line": " lib/cloud.php:53"
        },
        {
            "message": "Missing item type\nDelete Document from Cloud",
            "line": " lib/cloud.php:206"
        },
        {
            "message": "Missing item type\nUpdates system log.",
            "line": " lib/cloud.php:219"
        },
        {
            "message": "Missing item type\nUpdates object log",
            "line": " lib/cloud.php:235"
        },
        {
            "message": "Missing item type\nLoad Configuration Data from Option, stored as JSON",
            "line": " lib/cloud.php:245"
        },
        {
            "message": "Missing item type\nGet information about information stored in cloud, synchronization status, etc.",
            "line": " lib/cloud.php:295"
        },
        {
            "message": "Missing item type\nInitializes Bridge by Adding Filters",
            "line": " lib/cloud.php:309"
        },
        {
            "message": "Missing item type",
            "line": " lib/saas.php:2"
        },
        {
            "message": "Missing item type\nUD SaaS Functions\n\nDescription: UD SaaS functions",
            "line": " lib/saas.php:9"
        },
        {
            "message": "Missing item type\nReturns one of several keys. Different keys are used for different things.\n\napi - key for API requests to site\n\nsite_uid - site ( blog ) unique ID. Only set your site UID if you know what you're doing. The key should only be used on one website at a time to avoid conflicts.\nFor instance, if you have a staging and a production environment with synchronized databases, you can use the same Site UID on both sites.\n\npublic_key - Public key is used on the front-end of the site to access data that requires a subscription. The public key is restricted to specified IP addresses\nand and is therefore safe for front-end use. The public key is provided by the UD API service after the site requesting it has been verified. This key is required to access\nmost restricted and premium functionality.\n\ncustomer_key - private keys issued to individuals directly, may be used on multiple sites and in most cases can take place of a missing site_uid. Never shown publicly\nin clear text. It can be used in md5 format when a public_key does not exist, or has been rejected.",
            "line": " lib/saas.php:21"
        },
        {
            "message": "Missing item type\nAPI Keys must be manually entered into the Settings UI or it can be set as define in wp-config.php",
            "line": " lib/saas.php:47"
        },
        {
            "message": "Missing item type\nSite UID must be manually generated into the Settings UI or it can be set as define in wp-config.php",
            "line": " lib/saas.php:56"
        },
        {
            "message": "Missing item type\nRequires site verification.",
            "line": " lib/saas.php:64"
        },
        {
            "message": "Missing item type\nCustomer Keys must be manually entered into the Settings UI. Customer Keys are given out during purchases, to beta testers,\nand in other non-automated situations.",
            "line": " lib/saas.php:72"
        },
        {
            "message": "Missing item type\nCustomer key must be the same for all blogs\nIt's stored in wp_options of blog #1.",
            "line": " lib/saas.php:79"
        },
        {
            "message": "Missing item type\nDetermines if SaaS settings are available",
            "line": " lib/saas.php:99"
        },
        {
            "message": "Missing item type\nDetermines if current site ( blog ) has capabilities for the passed premium feature",
            "line": " lib/saas.php:111"
        },
        {
            "message": "Missing item type\nHandler for general API calls to UD\n\nOn Errors, the data response includes request URL, request body, and response headers / body.",
            "line": " lib/saas.php:136"
        },
        {
            "message": "Missing item type",
            "line": " lib/saas.php:201"
        },
        {
            "message": "Missing item type\nViewModel class for all knockout/saas instances ( view models )",
            "line": " scripts/model.js:1"
        },
        {
            "message": "Missing item type\nDetermine if Saas connection is not established.\nIf yes, - so it can be the reason of timeout.\nTry to ignore Saas connection in this case and apply bindings without Saas. peshkov@UD",
            "line": " scripts/model.js:116"
        },
        {
            "message": "Missing item type\nCreates View_Model\n\nAny view_model methods or static variables shoud be added inside of this function.",
            "line": " scripts/model.js:160"
        },
        {
            "message": "Missing item type\nPushes new element to array.\n\nExample of usage:\ndata-bind=\"click: $root.add_data.bind( $data, $root.some_array, $root.vhandler )\"\nwhere $root.vhandler is a function, which creates data.\n\n$root.vhandler example:\nself.handler = function() {\n  var self = this;\n  self.arg1 = ko.observable( 'value1' );\n  self.arg2 = 'value2';\n}",
            "line": " scripts/model.js:199"
        },
        {
            "message": "Missing item type\nRemoves data from array.\n\nExample of usage:\ndata-bind=\"click: $root.remove_data.bind( $data, $root.some_array )\"",
            "line": " scripts/model.js:232"
        },
        {
            "message": "Missing item type\nChecks item in array\nTemplate Helper Function",
            "line": " scripts/model.js:255"
        },
        {
            "message": "Missing item type\nRenders Message in Navbar sent by SaaS.",
            "line": " scripts/model.js:266"
        },
        {
            "message": "Missing item type\nWrapper for ko.applyBindings()\n\nCalls before ko.applyBindings() - self.pre_apply()\nCalls after ko.applyBindings()  - init()",
            "line": " scripts/model.js:316"
        },
        {
            "message": "Missing item type",
            "line": " scripts/model.js:367"
        },
        {
            "message": "Missing item type\nRecursively parses model data and prepares it for MVVM view_model.\nInternal function which called automatically on view_model initialization.\nShould not be used manually!",
            "line": " scripts/model.js:392"
        },
        {
            "message": "Missing item type\nContains additional interfaces added by hooks\n\nIt's used instead of do_action.\nYou should add all additional data to the current interface by apply_filter,\nwhich has to be called in model.\n\nTo add 'some_action' hook to interface you should do the following steps:\nView:\n<div data-action_hook=\"some_action\"></div>\nModel:\nr._action = { some_hook: [ '<div>HEllo</div>', '<span>WoRlD!</span>' ], some_other_hook: [ '' ], ... }\nResult:\n<div data-action_hook=\"some_action\"><div>HEllo</div><span>WoRlD!</span></div>",
            "line": " scripts/model.js:450"
        },
        {
            "message": "Missing item type\nSAAS interface\nUsed by SaaS. All data for SaaS emit should be added here.",
            "line": " scripts/model.js:471"
        },
        {
            "message": "Missing item type\nAny other data.\nCheck it recursively.",
            "line": " scripts/model.js:502"
        },
        {
            "message": "Missing item type\nDetermine if we need to check data recursively or just set value.",
            "line": " scripts/model.js:511"
        },
        {
            "message": "Missing item type\nDetermine if we already have model or we need to get it from server.",
            "line": " scripts/model.js:535"
        },
        {
            "message": "Missing item type",
            "line": " scripts/model.js:541"
        },
        {
            "message": "Missing item type",
            "line": " scripts/model.js:589"
        },
        {
            "message": "Missing item type\nGo through all hooks and add interfaces if exist.\nSee: case _action in self._prepare_model_data()",
            "line": " scripts/model.js:605"
        },
        {
            "message": "Missing item type",
            "line": " scripts/model.js:621"
        },
        {
            "message": "Missing item type\nRan after SaaS has trigger Screen Set Event, meaning it is ready",
            "line": " scripts/model.js:623"
        },
        {
            "message": "Missing item type\nIf ignore is true we stop SaaS initialization.\nIt happens, if timeout is called and Saas is still not established.",
            "line": " scripts/model.js:631"
        },
        {
            "message": "Missing item type\nDetermine if view_model has saas data before add listeners",
            "line": " scripts/model.js:641"
        },
        {
            "message": "Missing item type\nWait for Interface Request",
            "line": " scripts/model.js:650"
        },
        {
            "message": "Missing item type\nMonitor Update Triggers, and set values",
            "line": " scripts/model.js:663"
        },
        {
            "message": "Missing item type",
            "line": " scripts/model.js:714"
        },
        {
            "message": "Missing item type\nObservable data, pares and add Subscribers to all observable items that emit updates",
            "line": " scripts/model.js:728"
        },
        {
            "message": "Missing item type\nNow we try to connect to SaaS ( if saas.model is set )\nIf SaaS Screen is specified, we wait for screen to be ready, and then load Interface, if needed",
            "line": " scripts/model.js:783"
        },
        {
            "message": "Missing item type",
            "line": " scripts/model.js:790"
        },
        {
            "message": "Missing item type\nUD Loader. Initial global object extended by product-specific globals",
            "line": " scripts/saas.js:1"
        },
        {
            "message": "Missing item type\nEstablish connection with UD Driver.\n\nTriggered by client-side functions when SaaS support is requested.",
            "line": " scripts/saas.js:43"
        },
        {
            "message": "Missing item type\nDisconnect from SaaS",
            "line": " scripts/saas.js:140"
        },
        {
            "message": "Missing item type\nProgrammatically Execute Emit\n\nExample: ud.saas.emit( 'get_capabilities' );",
            "line": " scripts/saas.js:158"
        },
        {
            "message": "Missing item type\nProgrammatically Execute Emit\n\nExample: ud.saas.emit( 'get_capabilities' );",
            "line": " scripts/saas.js:179"
        },
        {
            "message": "Missing item type\nInstance-specific emit/on handler\n\nA shorthand for a emit/on combination that tracks lookup instance.\nThe third argument can be a callback or a variable.",
            "line": " scripts/saas.js:210"
        },
        {
            "message": "Missing item type\nInternal logging function.",
            "line": " scripts/saas.js:280"
        },
        {
            "message": "Missing item type\nEnable Global IO Data Logger",
            "line": " scripts/saas.js:304"
        },
        {
            "message": "Missing item type\nSocket.IO",
            "line": " scripts/socket.js:1"
        },
        {
            "message": "Missing item type\nMain\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:16"
        },
        {
            "message": "Missing item type\nProtocol implemented.",
            "line": " scripts/socket.js:29"
        },
        {
            "message": "Missing item type\nAvailable transports, these will be populated with the available transports",
            "line": " scripts/socket.js:36"
        },
        {
            "message": "Missing item type\nKeep track of jsonp callbacks.",
            "line": " scripts/socket.js:43"
        },
        {
            "message": "Missing item type\nKeep track of our io.Sockets",
            "line": " scripts/socket.js:50"
        },
        {
            "message": "Missing item type\nKeep track of transactions",
            "line": " scripts/socket.js:57"
        },
        {
            "message": "Missing item type\nManages connections to hosts.",
            "line": " scripts/socket.js:64"
        },
        {
            "message": "Missing item type\nRequest Emitter (Standard way of doing requests)\n\nPaths should begin with a forwardslash and end without a trailing slash.\n\napp.request( METHOD, PATH, [ARGS, CALLBACK()]);",
            "line": " scripts/socket.js:105"
        },
        {
            "message": "Missing item type\nResponse Message Listener",
            "line": " scripts/socket.js:148"
        },
        {
            "message": "Missing item type\nLogger",
            "line": " scripts/socket.js:198"
        },
        {
            "message": "Missing item type\nUtilities\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:220"
        },
        {
            "message": "Missing item type\nUtilities namespace.",
            "line": " scripts/socket.js:229"
        },
        {
            "message": "Missing item type\nParses an URI",
            "line": " scripts/socket.js:236"
        },
        {
            "message": "Missing item type\nProduces a unique url that identifies a Socket.IO connection.",
            "line": " scripts/socket.js:259"
        },
        {
            "message": "Missing item type\nMergest 2 query strings in to once unique query string",
            "line": " scripts/socket.js:284"
        },
        {
            "message": "Missing item type\nTransforms a querystring in to an object",
            "line": " scripts/socket.js:305"
        },
        {
            "message": "Missing item type\nExecutes the given function when the page is loaded.\n\n    io.util.load(function () { console.log('page loaded'); });",
            "line": " scripts/socket.js:328"
        },
        {
            "message": "Missing item type\nAdds an event.",
            "line": " scripts/socket.js:346"
        },
        {
            "message": "Missing item type\nGenerates the correct `XMLHttpRequest` for regular and cross domain requests.",
            "line": " scripts/socket.js:359"
        },
        {
            "message": "Missing item type\nXHR based transport constructor.",
            "line": " scripts/socket.js:386"
        },
        {
            "message": "Missing item type\nChange the internal pageLoaded value.",
            "line": " scripts/socket.js:392"
        },
        {
            "message": "Missing item type\nDefers a function to ensure a spinner is not displayed by the browser",
            "line": " scripts/socket.js:401"
        },
        {
            "message": "Missing item type\nMerges two objects.",
            "line": " scripts/socket.js:417"
        },
        {
            "message": "Missing item type\nMerges prototypes from objects",
            "line": " scripts/socket.js:441"
        },
        {
            "message": "Missing item type\nShortcut for prototypical and static inheritance.",
            "line": " scripts/socket.js:450"
        },
        {
            "message": "Missing item type\nChecks if the given object is an Array.\n\n    io.util.isArray([]); // true\n    io.util.isArray({}); // false",
            "line": " scripts/socket.js:462"
        },
        {
            "message": "Missing item type\nIntersects values of two arrays into a third",
            "line": " scripts/socket.js:475"
        },
        {
            "message": "Missing item type\nArray indexOf compatibility.",
            "line": " scripts/socket.js:494"
        },
        {
            "message": "Missing item type\nConverts enumerables to array.",
            "line": " scripts/socket.js:507"
        },
        {
            "message": "Missing item type\nUA / engines detection namespace.",
            "line": " scripts/socket.js:522"
        },
        {
            "message": "Missing item type\nWhether the UA supports CORS for XHR.",
            "line": " scripts/socket.js:529"
        },
        {
            "message": "Missing item type\nDetect webkit.",
            "line": " scripts/socket.js:545"
        },
        {
            "message": "Missing item type\nDetect iPad/iPhone/iPod.",
            "line": " scripts/socket.js:552"
        },
        {
            "message": "Missing item type\nEvents\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:561"
        },
        {
            "message": "Missing item type\nExpose constructor.",
            "line": " scripts/socket.js:570"
        },
        {
            "message": "Missing item type\nEvent emitter constructor.",
            "line": " scripts/socket.js:575"
        },
        {
            "message": "Missing item type\nAdds a listener",
            "line": " scripts/socket.js:583"
        },
        {
            "message": "Missing item type\nAdds a volatile listener.",
            "line": " scripts/socket.js:606"
        },
        {
            "message": "Missing item type\nRemoves a listener.",
            "line": " scripts/socket.js:625"
        },
        {
            "message": "Missing item type\nRemoves all listeners for an event.",
            "line": " scripts/socket.js:661"
        },
        {
            "message": "Missing item type\nGets all listeners for a certain event.",
            "line": " scripts/socket.js:679"
        },
        {
            "message": "Missing item type\nEmits an event.",
            "line": " scripts/socket.js:700"
        },
        {
            "message": "Missing item type\nJSON Handling\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:740"
        },
        {
            "message": "Missing item type\nParser\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:1035"
        },
        {
            "message": "Missing item type\nParser namespace.",
            "line": " scripts/socket.js:1044"
        },
        {
            "message": "Missing item type\nPacket types.",
            "line": " scripts/socket.js:1051"
        },
        {
            "message": "Missing item type\nErrors reasons.",
            "line": " scripts/socket.js:1066"
        },
        {
            "message": "Missing item type\nErrors advice.",
            "line": " scripts/socket.js:1075"
        },
        {
            "message": "Missing item type\nShortcuts.",
            "line": " scripts/socket.js:1082"
        },
        {
            "message": "Missing item type\nEncodes a packet.",
            "line": " scripts/socket.js:1088"
        },
        {
            "message": "Missing item type\nEncodes multiple messages (payload).",
            "line": " scripts/socket.js:1157"
        },
        {
            "message": "Missing item type\nDecodes a packet",
            "line": " scripts/socket.js:1178"
        },
        {
            "message": "Missing item type\nDecodes data payload. Detects multiple messages",
            "line": " scripts/socket.js:1264"
        },
        {
            "message": "Missing item type\nTransports\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:1293"
        },
        {
            "message": "Missing item type\nExpose constructor.",
            "line": " scripts/socket.js:1302"
        },
        {
            "message": "Missing item type\nThis is the transport template for all supported transport methods.",
            "line": " scripts/socket.js:1307"
        },
        {
            "message": "Missing item type\nApply EventEmitter mixin.",
            "line": " scripts/socket.js:1318"
        },
        {
            "message": "Missing item type\nIndicates whether heartbeats is enabled for this transport",
            "line": " scripts/socket.js:1324"
        },
        {
            "message": "Missing item type\nHandles the response from the server. When a new response is received\nit will automatically update the timeout, decode the message and\nforwards the response to the onMessage function for further processing.",
            "line": " scripts/socket.js:1333"
        },
        {
            "message": "Missing item type\nHandles packets.",
            "line": " scripts/socket.js:1368"
        },
        {
            "message": "Missing item type\nSets close timeout",
            "line": " scripts/socket.js:1393"
        },
        {
            "message": "Missing item type\nCalled when transport disconnects.",
            "line": " scripts/socket.js:1408"
        },
        {
            "message": "Missing item type\nCalled when transport connects",
            "line": " scripts/socket.js:1420"
        },
        {
            "message": "Missing item type\nClears close timeout",
            "line": " scripts/socket.js:1430"
        },
        {
            "message": "Missing item type\nClear timeouts",
            "line": " scripts/socket.js:1442"
        },
        {
            "message": "Missing item type\nSends a packet",
            "line": " scripts/socket.js:1455"
        },
        {
            "message": "Missing item type\nSend the received heartbeat message back to server. So the server\nknows we are still connected.",
            "line": " scripts/socket.js:1465"
        },
        {
            "message": "Missing item type\nCalled when the transport opens.",
            "line": " scripts/socket.js:1476"
        },
        {
            "message": "Missing item type\nNotifies the base when the connection with the Socket.IO server\nhas been disconnected.",
            "line": " scripts/socket.js:1487"
        },
        {
            "message": "Missing item type\nGenerates a connection url based on the Socket.IO URL Protocol.\nSee <https://github.com/learnboost/socket.io-node/> for more details.",
            "line": " scripts/socket.js:1505"
        },
        {
            "message": "Missing item type\nChecks if the transport is ready to start a connection.",
            "line": " scripts/socket.js:1518"
        },
        {
            "message": "Missing item type\nSocket\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:1531"
        },
        {
            "message": "Missing item type\nExpose constructor.",
            "line": " scripts/socket.js:1540"
        },
        {
            "message": "Missing item type\nCreate a new `Socket.IO client` which can establish a persistent\nconnection with a Socket.IO enabled server.",
            "line": " scripts/socket.js:1545"
        },
        {
            "message": "Missing item type\nApply EventEmitter mixin.",
            "line": " scripts/socket.js:1595"
        },
        {
            "message": "Missing item type\nReturns a namespace listener/emitter for this socket",
            "line": " scripts/socket.js:1600"
        },
        {
            "message": "Missing item type\nEmits the given event to the Socket and all namespaces",
            "line": " scripts/socket.js:1617"
        },
        {
            "message": "Missing item type\nPerforms the handshake",
            "line": " scripts/socket.js:1635"
        },
        {
            "message": "Missing item type\nFind an available transport based on the options supplied in the constructor.",
            "line": " scripts/socket.js:1699"
        },
        {
            "message": "Missing item type\nConnects to the server.",
            "line": " scripts/socket.js:1716"
        },
        {
            "message": "Missing item type\nClears and sets a new heartbeat timeout using the value given by the\nserver during the handshake.",
            "line": " scripts/socket.js:1794"
        },
        {
            "message": "Missing item type\nSends a message.",
            "line": " scripts/socket.js:1810"
        },
        {
            "message": "Missing item type\nSets buffer state",
            "line": " scripts/socket.js:1827"
        },
        {
            "message": "Missing item type\nFlushes the buffer data over the wire.\nTo be invoked manually when 'manualFlush' is set to true.",
            "line": " scripts/socket.js:1842"
        },
        {
            "message": "Missing item type\nDisconnect the established connect.",
            "line": " scripts/socket.js:1853"
        },
        {
            "message": "Missing item type\nDisconnects the socket with a sync XHR.",
            "line": " scripts/socket.js:1872"
        },
        {
            "message": "Missing item type\nCheck if we need to use cross domain enabled transports. Cross domain would\nbe a different port or different domain name.",
            "line": " scripts/socket.js:1896"
        },
        {
            "message": "Missing item type\nCalled upon handshake.",
            "line": " scripts/socket.js:1910"
        },
        {
            "message": "Missing item type\nCalled when the transport opens",
            "line": " scripts/socket.js:1928"
        },
        {
            "message": "Missing item type\nCalled when the transport closes.",
            "line": " scripts/socket.js:1937"
        },
        {
            "message": "Missing item type\nCalled when the transport first opens a connection",
            "line": " scripts/socket.js:1947"
        },
        {
            "message": "Missing item type\nHandles an error.",
            "line": " scripts/socket.js:1956"
        },
        {
            "message": "Missing item type\nCalled when the transport disconnects.",
            "line": " scripts/socket.js:1974"
        },
        {
            "message": "Missing item type\nCalled upon reconnection.",
            "line": " scripts/socket.js:1999"
        },
        {
            "message": "Missing item type\nNamespaces\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:2084"
        },
        {
            "message": "Missing item type\nExpose constructor.",
            "line": " scripts/socket.js:2093"
        },
        {
            "message": "Missing item type\nSocket namespace constructor.",
            "line": " scripts/socket.js:2098"
        },
        {
            "message": "Missing item type\nApply EventEmitter mixin.",
            "line": " scripts/socket.js:2113"
        },
        {
            "message": "Missing item type\nCopies emit since we override it",
            "line": " scripts/socket.js:2118"
        },
        {
            "message": "Missing item type\nCreates a new namespace, by proxying the request to the socket. This\nallows us to use the synax as we do on the server.",
            "line": " scripts/socket.js:2125"
        },
        {
            "message": "Missing item type\nSends a packet.",
            "line": " scripts/socket.js:2135"
        },
        {
            "message": "Missing item type\nSends a message",
            "line": " scripts/socket.js:2147"
        },
        {
            "message": "Missing item type\nEmits an event",
            "line": " scripts/socket.js:2166"
        },
        {
            "message": "Missing item type\nDisconnects the namespace",
            "line": " scripts/socket.js:2190"
        },
        {
            "message": "Missing item type\nHandles a packet",
            "line": " scripts/socket.js:2206"
        },
        {
            "message": "Missing item type\nFlag interface.",
            "line": " scripts/socket.js:2277"
        },
        {
            "message": "Missing item type\nSend a message",
            "line": " scripts/socket.js:2287"
        },
        {
            "message": "Missing item type\nEmit an event",
            "line": " scripts/socket.js:2297"
        },
        {
            "message": "Missing item type\nWebSocket\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:2309"
        },
        {
            "message": "Missing item type\nExpose constructor.",
            "line": " scripts/socket.js:2318"
        },
        {
            "message": "Missing item type\nThe WebSocket transport uses the HTML5 WebSocket API to establish an\npersistent connection with the Socket.IO server. This transport will also\nbe inherited by the FlashSocket fallback as it provides a API compatible\npolyfill for the WebSockets.",
            "line": " scripts/socket.js:2323"
        },
        {
            "message": "Missing item type\nInherits from Transport.",
            "line": " scripts/socket.js:2337"
        },
        {
            "message": "Missing item type\nTransport name",
            "line": " scripts/socket.js:2342"
        },
        {
            "message": "Missing item type\nInitializes a new `WebSocket` connection with the Socket.IO server. We attach\nall the appropriate listeners to handle the responses from the server.",
            "line": " scripts/socket.js:2349"
        },
        {
            "message": "Missing item type\nSend a message to the Socket.IO server. The message will automatically be\nencoded in the correct message format.",
            "line": " scripts/socket.js:2386"
        },
        {
            "message": "Missing item type\nPayload",
            "line": " scripts/socket.js:2411"
        },
        {
            "message": "Missing item type\nDisconnect the established `WebSocket` connection.",
            "line": " scripts/socket.js:2423"
        },
        {
            "message": "Missing item type\nHandle the errors that `WebSocket` might be giving when we\nare attempting to connect or send messages.",
            "line": " scripts/socket.js:2434"
        },
        {
            "message": "Missing item type\nReturns the appropriate scheme for the URI generation.",
            "line": " scripts/socket.js:2445"
        },
        {
            "message": "Missing item type\nChecks if the browser has support for native `WebSockets` and that\nit's not the polyfill created for the FlashSocket transport.",
            "line": " scripts/socket.js:2454"
        },
        {
            "message": "Missing item type\nCheck if the `WebSocket` transport support cross domain communications.",
            "line": " scripts/socket.js:2465"
        },
        {
            "message": "Missing item type\nAdd the transport to your public io.transports array.",
            "line": " scripts/socket.js:2475"
        },
        {
            "message": "Missing item type\nFaux WebSocket\n\nCopyright: Hiroshi Ichikawa <http://gimite.net/en/>",
            "line": " scripts/socket.js:2484"
        },
        {
            "message": "Missing item type\nThis class represents a faux web socket.",
            "line": " scripts/socket.js:2509"
        },
        {
            "message": "Missing item type\nSend data to the web socket.",
            "line": " scripts/socket.js:2538"
        },
        {
            "message": "Missing item type\nClose this web socket gracefully.",
            "line": " scripts/socket.js:2564"
        },
        {
            "message": "Missing item type\nImplementation of {@link <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-registration\">DOM 2 EventTarget Interface</a>}",
            "line": " scripts/socket.js:2575"
        },
        {
            "message": "Missing item type\nImplementation of {@link <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-registration\">DOM 2 EventTarget Interface</a>}",
            "line": " scripts/socket.js:2590"
        },
        {
            "message": "Missing item type\nImplementation of {@link <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-registration\">DOM 2 EventTarget Interface</a>}",
            "line": " scripts/socket.js:2609"
        },
        {
            "message": "Missing item type\nHandles an event from Flash.",
            "line": " scripts/socket.js:2624"
        },
        {
            "message": "Missing item type\nDefine the WebSocket readyState enumeration.",
            "line": " scripts/socket.js:2673"
        },
        {
            "message": "Missing item type\nLoad a new flash security policy file.",
            "line": " scripts/socket.js:2686"
        },
        {
            "message": "Missing item type\nLoads WebSocketMain.swf and creates WebSocketMain object in Flash.",
            "line": " scripts/socket.js:2696"
        },
        {
            "message": "Missing item type\nCalled by Flash to notify JS that it's fully loaded and ready\nfor communication.",
            "line": " scripts/socket.js:2740"
        },
        {
            "message": "Missing item type\nCalled by Flash to notify WebSockets events are fired.",
            "line": " scripts/socket.js:2758"
        },
        {
            "message": "Missing item type\nTest if the browser is running flash lite.",
            "line": " scripts/socket.js:2797"
        },
        {
            "message": "Missing item type\nXHR\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:2826"
        },
        {
            "message": "Missing item type\nExpose constructor.",
            "line": " scripts/socket.js:2835"
        },
        {
            "message": "Missing item type\nXHR constructor",
            "line": " scripts/socket.js:2842"
        },
        {
            "message": "Missing item type\nInherits from Transport.",
            "line": " scripts/socket.js:2855"
        },
        {
            "message": "Missing item type\nEstablish a connection",
            "line": " scripts/socket.js:2860"
        },
        {
            "message": "Missing item type\nCheck if we need to send data to the Socket.IO server, if we have data in our\nbuffer we encode it and forward it to the `post` method.",
            "line": " scripts/socket.js:2878"
        },
        {
            "message": "Missing item type\nSend data to the Socket.IO server.",
            "line": " scripts/socket.js:2894"
        },
        {
            "message": "Missing item type\nPosts a encoded message to the Socket.IO server.",
            "line": " scripts/socket.js:2906"
        },
        {
            "message": "Missing item type\nDisconnects the established `XHR` connection.",
            "line": " scripts/socket.js:2948"
        },
        {
            "message": "Missing item type\nGenerates a configured XHR request",
            "line": " scripts/socket.js:2959"
        },
        {
            "message": "Missing item type\nReturns the scheme to use for the transport URLs.",
            "line": " scripts/socket.js:2988"
        },
        {
            "message": "Missing item type\nCheck if the XHR transports are supported",
            "line": " scripts/socket.js:2997"
        },
        {
            "message": "Missing item type\nCheck if the XHR transport supports cross domain requests.",
            "line": " scripts/socket.js:3018"
        },
        {
            "message": "Missing item type\nXHR Polling\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:3030"
        },
        {
            "message": "Missing item type\nExpose constructor.",
            "line": " scripts/socket.js:3039"
        },
        {
            "message": "Missing item type\nThe XHR-polling transport uses long polling XHR requests to create a\n\"persistent\" connection with the server.",
            "line": " scripts/socket.js:3044"
        },
        {
            "message": "Missing item type\nInherits from XHR transport.",
            "line": " scripts/socket.js:3055"
        },
        {
            "message": "Missing item type\nMerge the properties from XHR transport",
            "line": " scripts/socket.js:3060"
        },
        {
            "message": "Missing item type\nTransport name",
            "line": " scripts/socket.js:3065"
        },
        {
            "message": "Missing item type\nIndicates whether heartbeats is enabled for this transport",
            "line": " scripts/socket.js:3072"
        },
        {
            "message": "Missing item type\nEstablish a connection, for iPhone and Android this will be done once the page\nis loaded.",
            "line": " scripts/socket.js:3081"
        },
        {
            "message": "Missing item type\nStarts a XHR request to wait for incoming messages.",
            "line": " scripts/socket.js:3095"
        },
        {
            "message": "Missing item type\nHandle the unclean close behavior.",
            "line": " scripts/socket.js:3144"
        },
        {
            "message": "Missing item type\nWebkit based browsers show a infinit spinner when you start a XHR request\nbefore the browsers onload event is called so we need to defer opening of\nthe transport until the onload event is called. Wrapping the cb in our\ndefer method solve this.",
            "line": " scripts/socket.js:3162"
        },
        {
            "message": "Missing item type\nAdd the transport to your public io.transports array.",
            "line": " scripts/socket.js:3180"
        },
        {
            "message": "Missing item type\nJSON Polling\n\nsocket.io\nCopyright(c) 2011 LearnBoost <dev@learnboost.com>\nMIT Licensed",
            "line": " scripts/socket.js:3189"
        },
        {
            "message": "Missing item type\nThere is a way to hide the loading indicator in Firefox. If you create and\nremove a iframe it will stop showing the current loading indicator.\nUnfortunately we can't feature detect that and UA sniffing is evil.",
            "line": " scripts/socket.js:3197"
        },
        {
            "message": "Missing item type\nExpose constructor.",
            "line": " scripts/socket.js:3207"
        },
        {
            "message": "Missing item type\nThe JSONP transport creates an persistent connection by dynamically\ninserting a script tag in the page. This script tag will receive the\ninformation of the Socket.IO server. When new information is received\nit creates a new script tag for the new data stream.",
            "line": " scripts/socket.js:3212"
        },
        {
            "message": "Missing item type\nInherits from XHR polling transport.",
            "line": " scripts/socket.js:3234"
        },
        {
            "message": "Missing item type\nTransport name",
            "line": " scripts/socket.js:3239"
        },
        {
            "message": "Missing item type\nPosts a encoded message to the Socket.IO server using an iframe.\nThe iframe is used because script tags can create POST based requests.\nThe iframe is positioned outside of the view so the user does not\nnotice it's existence.",
            "line": " scripts/socket.js:3246"
        },
        {
            "message": "Missing item type\nCreates a new JSONP poll that can be used to listen\nfor messages from the Socket.IO server.",
            "line": " scripts/socket.js:3332"
        },
        {
            "message": "Missing item type\nCallback function for the incoming message stream from the Socket.IO server.",
            "line": " scripts/socket.js:3367"
        },
        {
            "message": "Missing item type\nThe indicator hack only works after onload",
            "line": " scripts/socket.js:3381"
        },
        {
            "message": "Missing item type\nChecks if browser supports this transport.",
            "line": " scripts/socket.js:3397"
        },
        {
            "message": "Missing item type\nCheck if cross domain requests are supported",
            "line": " scripts/socket.js:3407"
        },
        {
            "message": "Missing item type\nAdd the transport to your public io.transports array.",
            "line": " scripts/socket.js:3417"
        }
    ]
}